import {
  D,
  E,
  _
} from "./chunk-YAGD63NB.js";
import {
  e
} from "./chunk-KQG23UDY.js";

// node_modules/.pnpm/@tauri-apps+api@1.5.1/node_modules/@tauri-apps/api/chunk-Q3NLRNFY.js
var l = {};
e(l, { checkUpdate: () => c, installUpdate: () => f, onUpdaterEvent: () => d });
async function d(n) {
  return E("tauri://update-status", (e2) => {
    n(e2 == null ? void 0 : e2.payload);
  });
}
async function f() {
  let n;
  function e2() {
    n && n(), n = void 0;
  }
  return new Promise((i, r) => {
    function o(a) {
      if (a.error) {
        e2(), r(a.error);
        return;
      }
      a.status === "DONE" && (e2(), i());
    }
    d(o).then((a) => {
      n = a;
    }).catch((a) => {
      throw e2(), a;
    }), D("tauri://update-install").catch((a) => {
      throw e2(), a;
    });
  });
}
async function c() {
  let n;
  function e2() {
    n && n(), n = void 0;
  }
  return new Promise((i, r) => {
    function o(t) {
      e2(), i({ manifest: t, shouldUpdate: true });
    }
    function a(t) {
      if (t.error) {
        e2(), r(t.error);
        return;
      }
      t.status === "UPTODATE" && (e2(), i({ shouldUpdate: false }));
    }
    _("tauri://update-available", (t) => {
      o(t == null ? void 0 : t.payload);
    }).catch((t) => {
      throw e2(), t;
    }), d(a).then((t) => {
      n = t;
    }).catch((t) => {
      throw e2(), t;
    }), D("tauri://update").catch((t) => {
      throw e2(), t;
    });
  });
}

export {
  l,
  d,
  f,
  c
};
//# sourceMappingURL=chunk-WO56MBC7.js.map
