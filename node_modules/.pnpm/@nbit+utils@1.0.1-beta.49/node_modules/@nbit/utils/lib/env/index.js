'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

require('../index.js');
var index$1 = require('../fast-url/index.js');

const { getFastUrl } = index$1;
// 环境枚举
exports.EnvTypesEnum = void 0;
(function (EnvTypesEnum) {
    // 本地环境
    EnvTypesEnum["development"] = "development";
    // sg 开发环境
    EnvTypesEnum["dev"] = "dev";
    // 测试环境
    EnvTypesEnum["test"] = "test";
    // 压测环境
    EnvTypesEnum["stress"] = "stress";
    // 生产环境
    EnvTypesEnum["production"] = "production";
})(exports.EnvTypesEnum || (exports.EnvTypesEnum = {}));
/**
 * 目前支持的云环境类别
 */
exports.ExtTypesEnum = void 0;
(function (ExtTypesEnum) {
    // 默认环境
    ExtTypesEnum[ExtTypesEnum["default"] = 0] = "default";
    // 华为云环境
    ExtTypesEnum[ExtTypesEnum["hw"] = 1] = "hw";
    // IM 环境
    ExtTypesEnum[ExtTypesEnum["im"] = 2] = "im";
})(exports.ExtTypesEnum || (exports.ExtTypesEnum = {}));
/**
 * Nodejs 环境变量映射到实际业务的环境变量简称
 */
const EnvTypesMap = {
    [exports.EnvTypesEnum.development]: 'staging',
    [exports.EnvTypesEnum.dev]: 'dev',
    [exports.EnvTypesEnum.test]: 'staging',
    [exports.EnvTypesEnum.stress]: 'stress',
    [exports.EnvTypesEnum.production]: 'prod',
};
/** S3 配置文件名枚举 */
exports.S3UrlNameEnum = void 0;
(function (S3UrlNameEnum) {
    /** dns 配置文件名 */
    S3UrlNameEnum["dnsConfig"] = "_dnsConfig.json";
    /** 动态化配置文件名 */
    S3UrlNameEnum["moduleAuthConfig"] = "_mainFuncStatus.json";
})(exports.S3UrlNameEnum || (exports.S3UrlNameEnum = {}));
/**
 * 获取 S3 域名配置信息
 */
const getBaseEnvS3Url = (mode, type, extType = exports.ExtTypesEnum.default) => {
    if (mode === exports.EnvTypesEnum.production) {
        let rootUrl = 'https://newbit-prod-s3-saas.s3.ap-northeast-1.amazonaws.com/';
        if (extType === exports.ExtTypesEnum.hw) {
            rootUrl = 'https://newbit-s3-prod-huawei-saas.s3.ap-southeast-1.amazonaws.com/';
        }
        if (extType === exports.ExtTypesEnum.im) {
            rootUrl = 'https://im-prod-s3-saas.s3.ap-southeast-1.amazonaws.com/';
        }
        return getFastUrl(`${rootUrl}${type}`);
    }
    if (mode === exports.EnvTypesEnum.dev) {
        return getFastUrl(`https://newbit-dev-s3-saas.s3.ap-southeast-1.amazonaws.com/${type}`);
    }
    if (mode === exports.EnvTypesEnum.test) {
        if (extType === exports.ExtTypesEnum.im) {
            return getFastUrl(`https://im-s3-staging-saas.s3.ap-southeast-1.amazonaws.com/${type}`);
        }
        return getFastUrl(`https://newbit-staging-s3-saas.s3.ap-southeast-1.amazonaws.com/${type}`);
    }
    // 默认采用测试环境
    if (extType === exports.ExtTypesEnum.im) {
        return getFastUrl(`https://im-s3-staging-saas.s3.ap-southeast-1.amazonaws.com/${type}`);
    }
    return getFastUrl(`https://newbit-staging-s3-saas.s3.ap-southeast-1.amazonaws.com/${type}`);
};
/**
 * 获取 S3 域名配置信息
 */
const getEnvS3Url = (mode, businessId, urlName = exports.S3UrlNameEnum.dnsConfig, extType = exports.ExtTypesEnum.default) => {
    return getBaseEnvS3Url(mode, `${businessId}${urlName}`, extType);
};
/**
 * 获取 S3 秘钥信息
 */
const getEnvSecretS3KeyConfig = (mode, accessKey, extType = exports.ExtTypesEnum.default) => {
    return getBaseEnvS3Url(mode, `${accessKey}.json`, extType);
};
/**
 * 获取融合模式秘钥信息
 */
const getMergeModeEnvSecretS3KeyConfig = (mode, accessKey, extType = exports.ExtTypesEnum.default) => {
    if (mode === exports.EnvTypesEnum.production) {
        let rootUrl = `https://hybird-accesskey-prod-saas.s3.ap-northeast-1.amazonaws.com/${accessKey}.json`;
        if (extType === exports.ExtTypesEnum.hw) {
            rootUrl = `https://hybird-accesskey-prod-huawei-saas.s3.ap-southeast-1.amazonaws.com/${accessKey}.json`;
        }
        if (extType === exports.ExtTypesEnum.im) {
            rootUrl = `https://hybird-accesskey-prod-saas.s3.ap-northeast-1.amazonaws.com/${accessKey}.json`;
        }
        return rootUrl;
    }
    if (mode === exports.EnvTypesEnum.dev) {
        return `https://hybird-accesskey-dev-saas.s3.ap-northeast-1.amazonaws.com/${accessKey}.json`;
    }
    if (mode === exports.EnvTypesEnum.test) {
        return `https://hybird-accesskey-staging-saas.s3.ap-northeast-1.amazonaws.com/${accessKey}.json`;
    }
    // 默认采用测试环境
    return `https://hybird-accesskey-staging-saas.s3.ap-northeast-1.amazonaws.com/${accessKey}.json`;
};
/**
 * AWS S3 对象存储配置，上传需要的 config
 */
function getEnvAwsS3Config(mode) {
    if (mode === exports.EnvTypesEnum.production) {
        return {
            region: 'ap-northeast-1',
            accessKeyId: 'AKIAYR2KF6TGWOQ67CXX',
            secretAccessKey: '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',
            bucket: 'nb-sg-prod-saas',
        };
    }
    return {
        region: 'ap-southeast-1',
        accessKeyId: 'AKIAYR2KF6TGWOQ67CXX',
        secretAccessKey: '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',
        bucket: 'nb-sg-dev-saas',
    };
}
/**
 * 获取系统维护相关信息
 */
const getEnvS3MaintenanceApiUrl = (mode, businessId) => {
    switch (mode) {
        case exports.EnvTypesEnum.production:
            return getFastUrl(`https://newbit-prod-s3-saas.s3.ap-northeast-1.amazonaws.com/${businessId}_maintenanceConfig.json`);
        case exports.EnvTypesEnum.dev:
            return getFastUrl(`https://newbit-dev-s3-saas.s3.ap-southeast-1.amazonaws.com/${businessId}_maintenanceConfig.json`);
        case exports.EnvTypesEnum.test:
            return getFastUrl(`https://newbit-staging-s3-saas.s3.ap-southeast-1.amazonaws.com/${businessId}_maintenanceConfig.json`);
        default:
            return getFastUrl(`https://newbit-dev-s3-saas.s3.ap-southeast-1.amazonaws.com/${businessId}_maintenanceConfig.json`);
    }
};

exports.EnvTypesMap = EnvTypesMap;
exports.getBaseEnvS3Url = getBaseEnvS3Url;
exports.getEnvAwsS3Config = getEnvAwsS3Config;
exports.getEnvS3MaintenanceApiUrl = getEnvS3MaintenanceApiUrl;
exports.getEnvS3Url = getEnvS3Url;
exports.getEnvSecretS3KeyConfig = getEnvSecretS3KeyConfig;
exports.getMergeModeEnvSecretS3KeyConfig = getMergeModeEnvSecretS3KeyConfig;
