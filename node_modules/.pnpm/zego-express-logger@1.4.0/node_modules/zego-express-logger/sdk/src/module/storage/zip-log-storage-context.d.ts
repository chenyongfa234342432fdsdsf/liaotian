import { ZegoLog } from './model';
import { ConfigState } from '../common';
export declare class ZipLogStorageContext {
    private configState;
    private dbSaver;
    private logModel;
    private _dbOpened;
    private _dbTryOpen;
    private cache;
    private activating;
    private dbTaskQueue;
    private uploadTaskQueue;
    private zipLogUploader;
    private zipLogBuilder;
    private zipLogEnabled;
    private userLastUploadTime;
    private userLastUploadSuccess;
    private userUploading;
    constructor(configState: ConfigState);
    get dbOpened(): boolean;
    get dbTryOpened(): boolean;
    private makeStorageSpace;
    makeStorageSpaceUpload(): Promise<void>;
    openDB(): Promise<void>;
    private shouldOpenDB;
    enable(): void;
    /**
     * 普通日志
     * @param log debug、info、warn、error log
     */
    saveLog(log: string): void;
    removeLogList(logList: ZegoLog[]): Promise<void>;
    empty(): Promise<boolean>;
    private activeSaving;
    static isEnvSupport(): boolean;
    private uploadTask;
    private startASdkUploadTask;
    private startAUserUploadTask;
    setUploadUrl(url: string): void;
    /**
     * 用户控制开始上传当前缓存的日志
     */
    startUpload(): Promise<void>;
    destroy(): void;
}
