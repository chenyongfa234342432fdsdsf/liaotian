import Decimal from 'decimal.js';
import { marketUtils, decimalUtils } from '@nbit/utils';
import React, { memo } from 'react';
var defaultProps = {
  hasColor: true,
  hasPrefix: true,
  hasPostfix: false,
  isRound: false,
  kSign: true,
  needPercentCalc: false,
  delZero: true,
  defaultEmptyText: '--',
  diffTarget: 0
};
/** 涨跌组件，支持涨跌色、千分位、前后缀正值负值符号等、 */
var IncreaseTag = function IncreaseTag(props) {
  var left = props.left,
    right = props.right,
    hasFather = props.hasFather,
    digits = props.digits;
  var value = "".concat(props.value === undefined ? '--' : props.value);
  var increaseClassStr = props.hasColor ? marketUtils.getColorClassByPrice(value, props.diffTarget) : '';
  var increaseClassStrWrap = increaseClassStr ? "tag-wrap-".concat(increaseClassStr) : 'tag-wrap';
  var _digits = digits !== null && digits !== void 0 ? digits : decimalUtils.getDigits(value);
  /**
   * @description: 处理前缀、后缀、千分位、逗号格式化
   * @param {number} val
   * @param {string} origin
   * @param {*} postfix
   */
  var getformatFixStr = function getformatFixStr(val, origin) {
    var postfix = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '%';
    var hasPrefix = props.hasPrefix,
      hasPostfix = props.hasPostfix,
      kSign = props.kSign;
    var str = '';
    if (hasPrefix) {
      var comparedZeroRes = decimalUtils.getSafeDecimal(val).comparedTo(decimalUtils.getSafeDecimal(0));
      var prefix = comparedZeroRes === 1 ? '+' : '';
      str = "".concat(prefix).concat(str);
    }
    str = "".concat(str).concat(val);
    if (hasPostfix) {
      str = "".concat(str).concat(postfix);
    }
    // 是否添加千位分隔符
    if (kSign) {
      var list = str.split('.');
      if (list.length > 1) ;
      var decimal = list.length > 1 ? ".".concat(list[1]) : '';
      str = list[0].replace(/(\d)(?=(?:\d{3})+$)/g, '$1,') + decimal;
    }
    return str;
  };
  /**
   * @description: 获取最终页面展示值
   */
  var getIncreaseNumber = function getIncreaseNumber() {
    var isCheckZero = props.isCheckZero,
      defaultEmptyText = props.defaultEmptyText,
      hasPostfix = props.hasPostfix,
      delZero = props.delZero,
      isRound = props.isRound,
      needPercentCalc = props.needPercentCalc;
    if (value === '' || value === '--' || value === undefined) {
      return defaultEmptyText;
    }
    if (isCheckZero) {
      if (value === '0') {
        return defaultEmptyText;
      }
    }
    var accurateVal;
    // 最终显示值不需要后缀
    if (!hasPostfix) {
      accurateVal = decimalUtils.formatZeroPrefix(decimalUtils.getSafeDecimal(value).toFixed(_digits, isRound ? Decimal.ROUND_HALF_UP : Decimal.ROUND_DOWN), _digits);
      if (delZero) {
        accurateVal = decimalUtils.removeDecimalZero(accurateVal);
      }
      return getformatFixStr(accurateVal, value, '');
    }
    // 需要后缀、后端没处理过得值
    // 需要处理百分比计算。这是默认选项
    if (needPercentCalc) {
      accurateVal = decimalUtils.formatZeroPrefix(decimalUtils.getSafeDecimal(value).mul(Math.pow(10, 2)).toFixed(_digits, isRound ? Decimal.ROUND_HALF_UP : Decimal.ROUND_DOWN), _digits);
      if (delZero) {
        accurateVal = decimalUtils.removeDecimalZero(accurateVal);
      }
      return getformatFixStr(accurateVal, value, '%');
    }
    // 不需要处理百分比
    accurateVal = decimalUtils.formatZeroPrefix(decimalUtils.getSafeDecimal(value).toFixed(_digits, isRound ? Decimal.ROUND_HALF_UP : Decimal.ROUND_DOWN), _digits);
    if (delZero) {
      accurateVal = decimalUtils.removeDecimalZero(accurateVal);
    }
    return getformatFixStr(accurateVal);
  };
  if (hasFather) {
    return React.createElement("span", {
      className: "".concat(increaseClassStrWrap)
    }, React.createElement("span", {
      className: "increase-wrap ".concat(increaseClassStr)
    }, left && left, getIncreaseNumber(), right && right));
  }
  return React.createElement("span", {
    className: "increase-wrap ".concat(increaseClassStr)
  }, left && left, getIncreaseNumber(), right && right);
};
IncreaseTag.defaultProps = defaultProps;
var index = memo(IncreaseTag);
export { index as default };
