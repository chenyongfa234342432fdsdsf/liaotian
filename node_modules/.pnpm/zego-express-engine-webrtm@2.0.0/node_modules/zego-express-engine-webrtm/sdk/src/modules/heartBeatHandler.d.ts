import { ZegoLogger, ZegoDataReport, ZegoError } from '../zego.entity';
import { StateCenter } from '../stateCenter';
import { LiveRoomService } from '../service';
import { LiveRoomModules } from '.';
import { ZegoRoomServicer } from './ZegoRoomServicer';
export declare class HeartBeatHandler {
    private logger;
    private stateCenter;
    private dataReport;
    private liveRoomHandler;
    private room;
    private service?;
    private tryHeartbeatCount;
    private heartbeatTimer;
    private loginHeartbeatTimer;
    private heartbeatInterval;
    initCount: number;
    constructor(logger: ZegoLogger, stateCenter: StateCenter, dataReport: ZegoDataReport, liveRoomHandler: ZegoRoomServicer, room: LiveRoomModules, service?: LiveRoomService | undefined);
    init(msg: any): void;
    start(heartbeatInterval: number): void;
    private handleHeartbeatRsp;
    heartbeatRspNotiFy(msg: any, roomID: string): void;
    hbLogout(err: ZegoError): void;
    resetHeartbeat(): void;
}
